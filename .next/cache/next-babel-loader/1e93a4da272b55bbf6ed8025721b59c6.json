{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { colors, buttonAndLinkHover } from '../_variables';\nconst options = ['primary', 'primary--reversed', 'secondary', 'transparent--blue', 'transparent--green', 'transparent--red', 'transparent--white', 'save', 'save--reversed', 'delete', 'delete--reversed', 'inverted', 'inverted--reversed', 'secondary--green'];\n\nconst getButtonStyles = type => {\n  switch (type) {\n    case 'primary':\n      return {\n        backgroundColor: colors.red,\n        boxShadow: '0px 2px 10px 0px rgba(0,0,0,0.2)',\n        color: '#FFFFFF'\n      };\n\n    case 'secondary':\n      return {\n        backgroundColor: '#FFFFFF',\n        color: colors.blue,\n        boxShadow: '0px 2px 10px 0px rgba(0,0,0,0.2)'\n      };\n\n    case 'centered':\n      return {\n        backgroundColor: colors.lightblue,\n        color: colors.blue\n      };\n\n    case 'link-btn':\n      return {\n        color: '#FFFFFF',\n        backgroundColor: colors.blue\n      };\n\n    case 'link-btn-inverted':\n      return {\n        color: colors.blue,\n        border: `1px solid ${colors.blue}`,\n        backgroundColor: '#FFFFFF'\n      };\n\n    default:\n      break;\n  }\n};\n\nconst StyledButton = styled.button.withConfig({\n  displayName: \"Button__StyledButton\",\n  componentId: \"sc-1fps2wd-0\"\n})([\"text-transform:uppercase;font-family:Work Sans;font-weight 400;border-radius:25px;position:relative;display:flex;justify-content:center flex-direction:row;align-items:center;justify-items:center;font-size:14px;text-transform:uppercase;letter-spacing:1px;padding-top:13px;padding-bottom:12px;padding-right:\", \";padding-left:\", \";outline:none;border:none;transition:all 400ms ease;&:hover{\", \"}\", \" a{font-size:14px;color:white;text-decoration:none;}img{margin-right:4px;margin-left:4px;}\", \" \", \";\", \"\"], props => props.type.includes('transparent') ? '0px' : '20px', props => props.type.includes('transparent') ? '0px' : '20px', buttonAndLinkHover, props => props.isDisabled && `background: ${colors.gray}; color: ${colors.black}; border: none; box-shadow: none;\n    &:hover{\n      cursor: default;\n      transform: translateY(0px)\n    }\n    `, props => props.type ? getButtonStyles(props.type) : getButtonStyles('primary'), props => props.mobileHide ? `display: none` : `display: flex`, props => props.style ? props.style : null); // {props.isLoading ? (\n//   <>\n//     <Loader {...props} />\n//     <div style={{ color: 'transparent' }}>{props.children}</div>\n//   </>\n// ) : (\n//   props.children\n// )}\n\nconst Button = (_ref) => {\n  let {\n    label\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  return __jsx(StyledButton, props, props.children);\n};\n\nexport { Button }; // const Loader = styled.span`\n//   text-indent: -9999em;\n//   width: 20px;\n//   height: 20px;\n//   border-radius: 50%;\n//   background: ${props => {\n//     return props.type\n//       ? getColors(props.type).background === 'transparent'\n//         ? '#D8D8D8'\n//         : 'rgba(255, 255, 255, 0.2)'\n//       : 'white';\n//   }};\n//   position: absolute;\n//   -webkit-animation: load3 1s infinite linear;\n//   animation: load3 1s infinite linear;\n//   -webkit-transform: translateZ(0);\n//   -ms-transform: translateZ(0);\n//   transform: translateZ(0);\n//   &:before {\n//     width: 50%;\n//     height: 50%;\n//     background: ${props => {\n//       return props.type ? getColors(props.type).color : 'white';\n//     }};\n//     border-radius: 100% 0 0 0;\n//     position: absolute;\n//     top: 0;\n//     left: 0;\n//     content: '';\n//   }\n//   &:after {\n//     background: ${props => {\n//       return props.type\n//         ? getColors(props.type).background === 'transparent'\n//           ? 'white'\n//           : getColors(props.type).background\n//         : 'white';\n//     }};\n//     width: 78%;\n//     height: 78%;\n//     border-radius: 50%;\n//     content: '';\n//     margin: auto;\n//     position: absolute;\n//     top: 0;\n//     left: 0;\n//     bottom: 0;\n//     right: 0;\n//   }\n//   @-webkit-keyframes load3 {\n//     0% {\n//       -webkit-transform: rotate(0deg);\n//       transform: rotate(0deg);\n//     }\n//     100% {\n//       -webkit-transform: rotate(360deg);\n//       transform: rotate(360deg);\n//     }\n//   }\n//   @keyframes load3 {\n//     0% {\n//       -webkit-transform: rotate(0deg);\n//       transform: rotate(0deg);\n//     }\n//     100% {\n//       -webkit-transform: rotate(360deg);\n//       transform: rotate(360deg);\n//     }\n//   }\n// `;","map":null,"metadata":{},"sourceType":"module"}