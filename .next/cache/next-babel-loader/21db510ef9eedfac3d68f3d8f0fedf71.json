{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/alexiastandish/Desktop/Freelance Clients/NewportMed/newportmed/components/header/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Waypoint } from \"react-waypoint\";\nimport { StyledNavWrapper } from \"./styles\";\nimport { withRouter } from \"next/router\";\nimport DesktopNav from \"./desktop-nav\";\nimport MobileNav from \"./mobile-nav\";\n\nconst Header = (_ref) => {\n  let {\n    menuOpen,\n    handleMenuToggle,\n    navLight,\n    router,\n    user\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"menuOpen\", \"handleMenuToggle\", \"navLight\", \"router\", \"user\"]);\n\n  const {\n    0: stickyNav,\n    1: setStickyNav\n  } = useState(false);\n\n  const getPosition = ({\n    currentPosition,\n    previousPosition\n  }) => {\n    if (previousPosition === \"above\") {\n      return setStickyNav(false);\n    }\n\n    if (previousPosition === \"inside\" || currentPosition === \"above\") {\n      return setStickyNav(true);\n    }\n\n    return;\n  };\n\n  return __jsx(Waypoint, {\n    onPositionChange: getPosition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      position: \"relative\",\n      zIndex: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(StyledNavWrapper, {\n    menuOpen: menuOpen,\n    stickyNav: stickyNav || navLight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(DesktopNav, {\n    stickyNav: stickyNav,\n    navLight: navLight,\n    router: router,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(MobileNav, {\n    menuOpen: menuOpen,\n    handleMenuToggle: handleMenuToggle,\n    stickyNav: stickyNav,\n    navLight: navLight,\n    router: router,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))));\n};\n\nexport default withRouter(Header);","map":{"version":3,"sources":["/Users/alexiastandish/Desktop/Freelance Clients/NewportMed/newportmed/components/header/index.js"],"names":["React","useState","Waypoint","StyledNavWrapper","withRouter","DesktopNav","MobileNav","Header","menuOpen","handleMenuToggle","navLight","router","user","props","stickyNav","setStickyNav","getPosition","currentPosition","previousPosition","position","zIndex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,SAASC,gBAAT,QAAiC,UAAjC;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,MAAMC,MAAM,GAAG,UAOT;AAAA,MAPU;AACdC,IAAAA,QADc;AAEdC,IAAAA,gBAFc;AAGdC,IAAAA,QAHc;AAIdC,IAAAA,MAJc;AAKdC,IAAAA;AALc,GAOV;AAAA,MADDC,KACC;;AACJ,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4Bd,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMe,WAAW,GAAG,CAAC;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAAD,KAA2C;AAC7D,QAAIA,gBAAgB,KAAK,OAAzB,EAAkC;AAChC,aAAOH,YAAY,CAAC,KAAD,CAAnB;AACD;;AACD,QAAIG,gBAAgB,KAAK,QAArB,IAAiCD,eAAe,KAAK,OAAzD,EAAkE;AAChE,aAAOF,YAAY,CAAC,IAAD,CAAnB;AACD;;AACD;AACD,GARD;;AAUA,SACE,MAAC,QAAD;AAAU,IAAA,gBAAgB,EAAEC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEZ,QAA5B;AAAsC,IAAA,SAAS,EAAEM,SAAS,IAAIJ,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,SAAS,EAAEI,SADb;AAEE,IAAA,QAAQ,EAAEJ,QAFZ;AAGE,IAAA,MAAM,EAAEC,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,SAAD;AACE,IAAA,QAAQ,EAAEH,QADZ;AAEE,IAAA,gBAAgB,EAAEC,gBAFpB;AAGE,IAAA,SAAS,EAAEK,SAHb;AAIE,IAAA,QAAQ,EAAEJ,QAJZ;AAKE,IAAA,MAAM,EAAEC,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF,CADF;AAoBD,CAxCD;;AAyCA,eAAeP,UAAU,CAACG,MAAD,CAAzB","sourcesContent":["import React, { useState } from \"react\";\nimport { Waypoint } from \"react-waypoint\";\n\nimport { StyledNavWrapper } from \"./styles\";\nimport { withRouter } from \"next/router\";\n\nimport DesktopNav from \"./desktop-nav\";\nimport MobileNav from \"./mobile-nav\";\n\nconst Header = ({\n  menuOpen,\n  handleMenuToggle,\n  navLight,\n  router,\n  user,\n  ...props\n}) => {\n  const [stickyNav, setStickyNav] = useState(false);\n\n  const getPosition = ({ currentPosition, previousPosition }) => {\n    if (previousPosition === \"above\") {\n      return setStickyNav(false);\n    }\n    if (previousPosition === \"inside\" || currentPosition === \"above\") {\n      return setStickyNav(true);\n    }\n    return;\n  };\n\n  return (\n    <Waypoint onPositionChange={getPosition}>\n      <div style={{ position: \"relative\", zIndex: 5 }}>\n        <StyledNavWrapper menuOpen={menuOpen} stickyNav={stickyNav || navLight}>\n          <DesktopNav\n            stickyNav={stickyNav}\n            navLight={navLight}\n            router={router}\n          />\n          <MobileNav\n            menuOpen={menuOpen}\n            handleMenuToggle={handleMenuToggle}\n            stickyNav={stickyNav}\n            navLight={navLight}\n            router={router}\n          />\n        </StyledNavWrapper>\n      </div>\n    </Waypoint>\n  );\n};\nexport default withRouter(Header);\n"]},"metadata":{},"sourceType":"module"}