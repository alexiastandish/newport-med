{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Waypoint } from \"react-waypoint\";\nimport { StyledNavWrapper } from \"./styles\";\nimport { withRouter } from \"next/router\";\nimport DesktopNav from \"./desktop-nav\";\nimport MobileNav from \"./mobile-nav\";\n\nvar Header = function Header(_ref) {\n  var menuOpen = _ref.menuOpen,\n      handleMenuToggle = _ref.handleMenuToggle,\n      navLight = _ref.navLight,\n      router = _ref.router,\n      user = _ref.user,\n      props = _objectWithoutProperties(_ref, [\"menuOpen\", \"handleMenuToggle\", \"navLight\", \"router\", \"user\"]);\n\n  var _useState = useState(false),\n      stickyNav = _useState[0],\n      setStickyNav = _useState[1];\n\n  var getPosition = function getPosition(_ref2) {\n    var currentPosition = _ref2.currentPosition,\n        previousPosition = _ref2.previousPosition;\n\n    if (previousPosition === \"above\") {\n      return setStickyNav(false);\n    }\n\n    if (previousPosition === \"inside\" || currentPosition === \"above\") {\n      return setStickyNav(true);\n    }\n\n    return;\n  };\n\n  return __jsx(Waypoint, {\n    onPositionChange: getPosition\n  }, __jsx(\"div\", {\n    style: {\n      position: \"relative\",\n      zIndex: 5\n    }\n  }, __jsx(StyledNavWrapper, {\n    menuOpen: menuOpen,\n    stickyNav: stickyNav || navLight\n  }, __jsx(DesktopNav, {\n    stickyNav: stickyNav,\n    navLight: navLight,\n    router: router\n  }), __jsx(MobileNav, {\n    menuOpen: menuOpen,\n    handleMenuToggle: handleMenuToggle,\n    stickyNav: stickyNav,\n    navLight: navLight,\n    router: router\n  }))));\n};\n\nexport default withRouter(Header);","map":null,"metadata":{},"sourceType":"module"}