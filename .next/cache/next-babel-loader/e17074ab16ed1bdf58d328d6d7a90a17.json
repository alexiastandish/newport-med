{"ast":null,"code":"import styled from \"styled-components\";\nimport { colors, buttonAndLinkHover } from \"../_variables\";\n\nconst getButtonStyles = type => {\n  switch (type) {\n    case \"primary\":\n      return {\n        backgroundColor: colors.red,\n        boxShadow: \"0px 2px 10px 0px rgba(0,0,0,0.2)\",\n        color: \"#FFFFFF\"\n      };\n\n    case \"secondary\":\n      return {\n        backgroundColor: \"#FFFFFF\",\n        color: colors.blue,\n        boxShadow: \"0px 2px 10px 0px rgba(0,0,0,0.2)\"\n      };\n\n    case \"centered\":\n      return {\n        backgroundColor: colors.lightblue,\n        color: colors.blue\n      };\n\n    case \"link-btn\":\n      return {\n        color: \"#FFFFFF\",\n        backgroundColor: colors.blue\n      };\n\n    case \"link-btn-inverted\":\n      return {\n        color: colors.blue,\n        border: `1px solid ${colors.blue}`,\n        backgroundColor: \"#FFFFFF\"\n      };\n\n    default:\n      break;\n  }\n}; // const ButtonLink = ({ label, ...props }) => {\n//   return <StyledButtonLink {...props}>{props.children}</StyledButtonLink>;\n// };\n\n\nconst ButtonLink = styled.a.withConfig({\n  displayName: \"ButtonLink\",\n  componentId: \"sc-8cci6a-0\"\n})([\"text-transform:uppercase;font-family:Work Sans;font-weight 400;border-radius:25px;position:relative;display:flex;justify-content:center flex-direction:row;align-items:center;justify-items:center;font-size:14px;text-transform:uppercase;letter-spacing:1px;padding-top:13px;padding-bottom:12px;padding-right:\", \";padding-left:\", \";outline:none;border:none;transition:all 400ms ease;&:hover{\", \"}\", \" a{font-size:14px;color:white;text-decoration:none;}img{margin-right:4px;margin-left:4px;}\", \" \", \";\", \"\"], props => props.type.includes(\"transparent\") ? \"0px\" : \"20px\", props => props.type.includes(\"transparent\") ? \"0px\" : \"20px\", buttonAndLinkHover, props => props.isDisabled && `background: ${colors.gray}; color: ${colors.black}; border: none; box-shadow: none;\n  &:hover{\n    cursor: default;\n    transform: translateY(0px)\n  }\n  `, props => props.type ? getButtonStyles(props.type) : getButtonStyles(\"primary\"), props => props.mobileHide ? `display: none` : `display: flex`, props => props.style ? props.style : null);\nexport { ButtonLink };","map":{"version":3,"sources":["/Users/alexiastandish/Desktop/Freelance Clients/NewportMed/newportmed/styles/common/ButtonLink.js"],"names":["styled","colors","buttonAndLinkHover","getButtonStyles","type","backgroundColor","red","boxShadow","color","blue","lightblue","border","ButtonLink","a","props","includes","isDisabled","gray","black","mobileHide","style"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,kBAAjB,QAA2C,eAA3C;;AAEA,MAAMC,eAAe,GAAGC,IAAI,IAAI;AAC9B,UAAQA,IAAR;AACE,SAAK,SAAL;AACE,aAAO;AACLC,QAAAA,eAAe,EAAEJ,MAAM,CAACK,GADnB;AAELC,QAAAA,SAAS,EAAE,kCAFN;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,WAAL;AACE,aAAO;AACLH,QAAAA,eAAe,EAAE,SADZ;AAELG,QAAAA,KAAK,EAAEP,MAAM,CAACQ,IAFT;AAGLF,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAK,UAAL;AACE,aAAO;AACLF,QAAAA,eAAe,EAAEJ,MAAM,CAACS,SADnB;AAELF,QAAAA,KAAK,EAAEP,MAAM,CAACQ;AAFT,OAAP;;AAIF,SAAK,UAAL;AACE,aAAO;AACLD,QAAAA,KAAK,EAAE,SADF;AAELH,QAAAA,eAAe,EAAEJ,MAAM,CAACQ;AAFnB,OAAP;;AAIF,SAAK,mBAAL;AACE,aAAO;AACLD,QAAAA,KAAK,EAAEP,MAAM,CAACQ,IADT;AAELE,QAAAA,MAAM,EAAG,aAAYV,MAAM,CAACQ,IAAK,EAF5B;AAGLJ,QAAAA,eAAe,EAAE;AAHZ,OAAP;;AAKF;AACE;AA9BJ;AAgCD,CAjCD,C,CAmCA;AACA;AACA;;;AAEA,MAAMO,UAAU,GAAGZ,MAAM,CAACa,CAAV;AAAA;AAAA;AAAA,6fAiBCC,KAAK,IACpBA,KAAK,CAACV,IAAN,CAAWW,QAAX,CAAoB,aAApB,IAAqC,KAArC,GAA6C,MAlB/B,EAmBAD,KAAK,IAAKA,KAAK,CAACV,IAAN,CAAWW,QAAX,CAAoB,aAApB,IAAqC,KAArC,GAA6C,MAnBvD,EAyBZb,kBAzBY,EA2BdY,KAAK,IACLA,KAAK,CAACE,UAAN,IACC,eAAcf,MAAM,CAACgB,IAAK,YAAWhB,MAAM,CAACiB,KAAM;;;;;GA7BrC,EA+CdJ,KAAK,IACLA,KAAK,CAACV,IAAN,GAAaD,eAAe,CAACW,KAAK,CAACV,IAAP,CAA5B,GAA2CD,eAAe,CAAC,SAAD,CAhD5C,EAmDdW,KAAK,IAAKA,KAAK,CAACK,UAAN,GAAoB,eAApB,GAAsC,eAnDlC,EAoDdL,KAAK,IAAKA,KAAK,CAACM,KAAN,GAAcN,KAAK,CAACM,KAApB,GAA4B,IApDxB,CAAhB;AAuDA,SAASR,UAAT","sourcesContent":["import styled from \"styled-components\";\nimport { colors, buttonAndLinkHover } from \"../_variables\";\n\nconst getButtonStyles = type => {\n  switch (type) {\n    case \"primary\":\n      return {\n        backgroundColor: colors.red,\n        boxShadow: \"0px 2px 10px 0px rgba(0,0,0,0.2)\",\n        color: \"#FFFFFF\"\n      };\n    case \"secondary\":\n      return {\n        backgroundColor: \"#FFFFFF\",\n        color: colors.blue,\n        boxShadow: \"0px 2px 10px 0px rgba(0,0,0,0.2)\"\n      };\n    case \"centered\":\n      return {\n        backgroundColor: colors.lightblue,\n        color: colors.blue\n      };\n    case \"link-btn\":\n      return {\n        color: \"#FFFFFF\",\n        backgroundColor: colors.blue\n      };\n    case \"link-btn-inverted\":\n      return {\n        color: colors.blue,\n        border: `1px solid ${colors.blue}`,\n        backgroundColor: \"#FFFFFF\"\n      };\n    default:\n      break;\n  }\n};\n\n// const ButtonLink = ({ label, ...props }) => {\n//   return <StyledButtonLink {...props}>{props.children}</StyledButtonLink>;\n// };\n\nconst ButtonLink = styled.a`\ntext-transform: uppercase;\nfont-family: Work Sans;\nfont-weight 400;\nborder-radius: 25px;\nposition: relative;\ndisplay: flex;\njustify-content: center\nflex-direction: row;\nalign-items: center;\njustify-items: center;\nfont-size: 14px;\ntext-transform: uppercase;\n// line-height: 1.71;\nletter-spacing: 1px;\npadding-top: 13px;\npadding-bottom: 12px;\npadding-right: ${props =>\n  props.type.includes(\"transparent\") ? \"0px\" : \"20px\"};\npadding-left: ${props => (props.type.includes(\"transparent\") ? \"0px\" : \"20px\")};\noutline: none;\nborder: none;\ntransition: all 400ms ease;\n\n&:hover {\n  ${buttonAndLinkHover}\n}\n${props =>\n  props.isDisabled &&\n  `background: ${colors.gray}; color: ${colors.black}; border: none; box-shadow: none;\n  &:hover{\n    cursor: default;\n    transform: translateY(0px)\n  }\n  `}\n\na {\n  font-size: 14px;\n  color: white;\n  text-decoration: none;\n}\n\nimg {\n  margin-right: 4px;\n  margin-left: 4px;\n}\n\n${props =>\n  props.type ? getButtonStyles(props.type) : getButtonStyles(\"primary\")}\n\n\n${props => (props.mobileHide ? `display: none` : `display: flex`)};\n${props => (props.style ? props.style : null)}\n`;\n\nexport { ButtonLink };\n"]},"metadata":{},"sourceType":"module"}