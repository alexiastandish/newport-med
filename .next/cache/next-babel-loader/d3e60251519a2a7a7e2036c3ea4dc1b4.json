{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/alexiastandish/Desktop/Freelance Clients/NewportMed/newportmed/styles/common/Button.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { colors, buttonAndLinkHover } from '../_variables';\nvar options = ['primary', 'primary--reversed', 'secondary', 'transparent--blue', 'transparent--green', 'transparent--red', 'transparent--white', 'save', 'save--reversed', 'delete', 'delete--reversed', 'inverted', 'inverted--reversed', 'secondary--green'];\n\nvar getButtonStyles = function getButtonStyles(type) {\n  switch (type) {\n    case 'primary':\n      return {\n        backgroundColor: colors.red,\n        boxShadow: '0px 2px 10px 0px rgba(0,0,0,0.2)',\n        color: '#FFFFFF'\n      };\n\n    case 'secondary':\n      return {\n        backgroundColor: '#FFFFFF',\n        color: colors.blue,\n        boxShadow: '0px 2px 10px 0px rgba(0,0,0,0.2)'\n      };\n\n    case 'centered':\n      return {\n        backgroundColor: colors.lightblue,\n        color: colors.blue\n      };\n\n    case 'link-btn':\n      return {\n        color: '#FFFFFF',\n        backgroundColor: colors.blue\n      };\n\n    case 'link-btn-inverted':\n      return {\n        color: colors.blue,\n        border: \"1px solid \".concat(colors.blue),\n        backgroundColor: '#FFFFFF'\n      };\n\n    default:\n      break;\n  }\n};\n\nvar StyledButton = styled.button.withConfig({\n  displayName: \"Button__StyledButton\",\n  componentId: \"sc-1fps2wd-0\"\n})([\"text-transform:uppercase;font-family:Work Sans;font-weight 400;border-radius:25px;position:relative;display:flex;justify-content:center flex-direction:row;align-items:center;justify-items:center;font-size:14px;text-transform:uppercase;letter-spacing:1px;padding-top:13px;padding-bottom:12px;padding-right:\", \";padding-left:\", \";outline:none;border:none;transition:all 400ms ease;&:hover{\", \"}\", \" a{font-size:14px;color:white;text-decoration:none;}img{margin-right:4px;margin-left:4px;}\", \" \", \";\", \"\"], function (props) {\n  return props.type.includes('transparent') ? '0px' : '20px';\n}, function (props) {\n  return props.type.includes('transparent') ? '0px' : '20px';\n}, buttonAndLinkHover, function (props) {\n  return props.isDisabled && \"background: \".concat(colors.gray, \"; color: \").concat(colors.black, \"; border: none; box-shadow: none;\\n    &:hover{\\n      cursor: default;\\n      transform: translateY(0px)\\n    }\\n    \");\n}, function (props) {\n  return props.type ? getButtonStyles(props.type) : getButtonStyles('primary');\n}, function (props) {\n  return props.mobileHide ? \"display: none\" : \"display: flex\";\n}, function (props) {\n  return props.style ? props.style : null;\n}); // {props.isLoading ? (\n//   <>\n//     <Loader {...props} />\n//     <div style={{ color: 'transparent' }}>{props.children}</div>\n//   </>\n// ) : (\n//   props.children\n// )}\n\nvar Button = function Button(_ref) {\n  var label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  return __jsx(StyledButton, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), props.children);\n};\n\nexport { Button }; // const Loader = styled.span`\n//   text-indent: -9999em;\n//   width: 20px;\n//   height: 20px;\n//   border-radius: 50%;\n//   background: ${props => {\n//     return props.type\n//       ? getColors(props.type).background === 'transparent'\n//         ? '#D8D8D8'\n//         : 'rgba(255, 255, 255, 0.2)'\n//       : 'white';\n//   }};\n//   position: absolute;\n//   -webkit-animation: load3 1s infinite linear;\n//   animation: load3 1s infinite linear;\n//   -webkit-transform: translateZ(0);\n//   -ms-transform: translateZ(0);\n//   transform: translateZ(0);\n//   &:before {\n//     width: 50%;\n//     height: 50%;\n//     background: ${props => {\n//       return props.type ? getColors(props.type).color : 'white';\n//     }};\n//     border-radius: 100% 0 0 0;\n//     position: absolute;\n//     top: 0;\n//     left: 0;\n//     content: '';\n//   }\n//   &:after {\n//     background: ${props => {\n//       return props.type\n//         ? getColors(props.type).background === 'transparent'\n//           ? 'white'\n//           : getColors(props.type).background\n//         : 'white';\n//     }};\n//     width: 78%;\n//     height: 78%;\n//     border-radius: 50%;\n//     content: '';\n//     margin: auto;\n//     position: absolute;\n//     top: 0;\n//     left: 0;\n//     bottom: 0;\n//     right: 0;\n//   }\n//   @-webkit-keyframes load3 {\n//     0% {\n//       -webkit-transform: rotate(0deg);\n//       transform: rotate(0deg);\n//     }\n//     100% {\n//       -webkit-transform: rotate(360deg);\n//       transform: rotate(360deg);\n//     }\n//   }\n//   @keyframes load3 {\n//     0% {\n//       -webkit-transform: rotate(0deg);\n//       transform: rotate(0deg);\n//     }\n//     100% {\n//       -webkit-transform: rotate(360deg);\n//       transform: rotate(360deg);\n//     }\n//   }\n// `;","map":{"version":3,"sources":["/Users/alexiastandish/Desktop/Freelance Clients/NewportMed/newportmed/styles/common/Button.js"],"names":["React","styled","colors","buttonAndLinkHover","options","getButtonStyles","type","backgroundColor","red","boxShadow","color","blue","lightblue","border","StyledButton","button","props","includes","isDisabled","gray","black","mobileHide","style","Button","label","children"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,kBAAjB,QAA2C,eAA3C;AAEA,IAAMC,OAAO,GAAG,CACd,SADc,EAEd,mBAFc,EAGd,WAHc,EAId,mBAJc,EAKd,oBALc,EAMd,kBANc,EAOd,oBAPc,EAQd,MARc,EASd,gBATc,EAUd,QAVc,EAWd,kBAXc,EAYd,UAZc,EAad,oBAbc,EAcd,kBAdc,CAAhB;;AAiBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,IAAI,EAAI;AAC9B,UAAQA,IAAR;AACE,SAAK,SAAL;AACE,aAAO;AACLC,QAAAA,eAAe,EAAEL,MAAM,CAACM,GADnB;AAELC,QAAAA,SAAS,EAAE,kCAFN;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,WAAL;AACE,aAAO;AACLH,QAAAA,eAAe,EAAE,SADZ;AAELG,QAAAA,KAAK,EAAER,MAAM,CAACS,IAFT;AAGLF,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAK,UAAL;AACE,aAAO;AACLF,QAAAA,eAAe,EAAEL,MAAM,CAACU,SADnB;AAELF,QAAAA,KAAK,EAAER,MAAM,CAACS;AAFT,OAAP;;AAIF,SAAK,UAAL;AACE,aAAO;AACLD,QAAAA,KAAK,EAAE,SADF;AAELH,QAAAA,eAAe,EAAEL,MAAM,CAACS;AAFnB,OAAP;;AAIF,SAAK,mBAAL;AACE,aAAO;AACLD,QAAAA,KAAK,EAAER,MAAM,CAACS,IADT;AAELE,QAAAA,MAAM,sBAAeX,MAAM,CAACS,IAAtB,CAFD;AAGLJ,QAAAA,eAAe,EAAE;AAHZ,OAAP;;AAKF;AACE;AA9BJ;AAgCD,CAjCD;;AAmCA,IAAMO,YAAY,GAAGb,MAAM,CAACc,MAAV;AAAA;AAAA;AAAA,6fAiBC,UAAAC,KAAK;AAAA,SACpBA,KAAK,CAACV,IAAN,CAAWW,QAAX,CAAoB,aAApB,IAAqC,KAArC,GAA6C,MADzB;AAAA,CAjBN,EAmBA,UAAAD,KAAK;AAAA,SACnBA,KAAK,CAACV,IAAN,CAAWW,QAAX,CAAoB,aAApB,IAAqC,KAArC,GAA6C,MAD1B;AAAA,CAnBL,EA0BZd,kBA1BY,EA4Bd,UAAAa,KAAK;AAAA,SACLA,KAAK,CAACE,UAAN,0BACehB,MAAM,CAACiB,IADtB,sBACsCjB,MAAM,CAACkB,KAD7C,2HADK;AAAA,CA5BS,EAgDd,UAAAJ,KAAK;AAAA,SACLA,KAAK,CAACV,IAAN,GAAaD,eAAe,CAACW,KAAK,CAACV,IAAP,CAA5B,GAA2CD,eAAe,CAAC,SAAD,CADrD;AAAA,CAhDS,EAoDd,UAAAW,KAAK;AAAA,SAAKA,KAAK,CAACK,UAAN,oCAAL;AAAA,CApDS,EAqDd,UAAAL,KAAK;AAAA,SAAKA,KAAK,CAACM,KAAN,GAAcN,KAAK,CAACM,KAApB,GAA4B,IAAjC;AAAA,CArDS,CAAlB,C,CAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAZR,KAAY;;AACtC,SAAO,MAAC,YAAD,eAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA0BA,KAAK,CAACS,QAAhC,CAAP;AACD,CAFD;;AAIA,SAASF,MAAT,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { colors, buttonAndLinkHover } from '../_variables';\n\nconst options = [\n  'primary',\n  'primary--reversed',\n  'secondary',\n  'transparent--blue',\n  'transparent--green',\n  'transparent--red',\n  'transparent--white',\n  'save',\n  'save--reversed',\n  'delete',\n  'delete--reversed',\n  'inverted',\n  'inverted--reversed',\n  'secondary--green'\n];\n\nconst getButtonStyles = type => {\n  switch (type) {\n    case 'primary':\n      return {\n        backgroundColor: colors.red,\n        boxShadow: '0px 2px 10px 0px rgba(0,0,0,0.2)',\n        color: '#FFFFFF'\n      };\n    case 'secondary':\n      return {\n        backgroundColor: '#FFFFFF',\n        color: colors.blue,\n        boxShadow: '0px 2px 10px 0px rgba(0,0,0,0.2)'\n      };\n    case 'centered':\n      return {\n        backgroundColor: colors.lightblue,\n        color: colors.blue\n      };\n    case 'link-btn':\n      return {\n        color: '#FFFFFF',\n        backgroundColor: colors.blue\n      };\n    case 'link-btn-inverted':\n      return {\n        color: colors.blue,\n        border: `1px solid ${colors.blue}`,\n        backgroundColor: '#FFFFFF'\n      };\n    default:\n      break;\n  }\n};\n\nconst StyledButton = styled.button`\n  text-transform: uppercase;\n  font-family: Work Sans;\n  font-weight 400;\n  border-radius: 25px;\n  position: relative;\n  display: flex;\n  justify-content: center\n  flex-direction: row;\n  align-items: center;\n  justify-items: center;\n  font-size: 14px;\n  text-transform: uppercase;\n  // line-height: 1.71;\n  letter-spacing: 1px;\n  padding-top: 13px;\n  padding-bottom: 12px;\n  padding-right: ${props =>\n    props.type.includes('transparent') ? '0px' : '20px'};\n  padding-left: ${props =>\n    props.type.includes('transparent') ? '0px' : '20px'};\n  outline: none;\n  border: none;\n  transition: all 400ms ease;\n\n  &:hover {\n    ${buttonAndLinkHover}\n  }\n  ${props =>\n    props.isDisabled &&\n    `background: ${colors.gray}; color: ${colors.black}; border: none; box-shadow: none;\n    &:hover{\n      cursor: default;\n      transform: translateY(0px)\n    }\n    `}\n\n  a {\n    font-size: 14px;\n    color: white;\n    text-decoration: none;\n  }\n\n  img {\n    margin-right: 4px;\n    margin-left: 4px;\n  }\n\n  ${props =>\n    props.type ? getButtonStyles(props.type) : getButtonStyles('primary')}\n\n\n  ${props => (props.mobileHide ? `display: none` : `display: flex`)};\n  ${props => (props.style ? props.style : null)}\n`;\n\n// {props.isLoading ? (\n//   <>\n//     <Loader {...props} />\n//     <div style={{ color: 'transparent' }}>{props.children}</div>\n//   </>\n// ) : (\n//   props.children\n// )}\n\nconst Button = ({ label, ...props }) => {\n  return <StyledButton {...props}>{props.children}</StyledButton>;\n};\n\nexport { Button };\n\n// const Loader = styled.span`\n//   text-indent: -9999em;\n//   width: 20px;\n//   height: 20px;\n//   border-radius: 50%;\n//   background: ${props => {\n//     return props.type\n//       ? getColors(props.type).background === 'transparent'\n//         ? '#D8D8D8'\n//         : 'rgba(255, 255, 255, 0.2)'\n//       : 'white';\n//   }};\n\n//   position: absolute;\n//   -webkit-animation: load3 1s infinite linear;\n//   animation: load3 1s infinite linear;\n//   -webkit-transform: translateZ(0);\n//   -ms-transform: translateZ(0);\n//   transform: translateZ(0);\n\n//   &:before {\n//     width: 50%;\n//     height: 50%;\n//     background: ${props => {\n//       return props.type ? getColors(props.type).color : 'white';\n//     }};\n//     border-radius: 100% 0 0 0;\n//     position: absolute;\n//     top: 0;\n//     left: 0;\n//     content: '';\n//   }\n\n//   &:after {\n//     background: ${props => {\n//       return props.type\n//         ? getColors(props.type).background === 'transparent'\n//           ? 'white'\n//           : getColors(props.type).background\n//         : 'white';\n//     }};\n//     width: 78%;\n//     height: 78%;\n//     border-radius: 50%;\n//     content: '';\n//     margin: auto;\n//     position: absolute;\n//     top: 0;\n//     left: 0;\n//     bottom: 0;\n//     right: 0;\n//   }\n\n//   @-webkit-keyframes load3 {\n//     0% {\n//       -webkit-transform: rotate(0deg);\n//       transform: rotate(0deg);\n//     }\n//     100% {\n//       -webkit-transform: rotate(360deg);\n//       transform: rotate(360deg);\n//     }\n//   }\n//   @keyframes load3 {\n//     0% {\n//       -webkit-transform: rotate(0deg);\n//       transform: rotate(0deg);\n//     }\n//     100% {\n//       -webkit-transform: rotate(360deg);\n//       transform: rotate(360deg);\n//     }\n//   }\n// `;\n"]},"metadata":{},"sourceType":"module"}