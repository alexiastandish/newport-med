{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport DeepDiff from 'deep-diff';\nimport classNames from 'classnames';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"validateAllFields\", function (schema, fields) {\n      try {\n        schema.validateSync(fields, {\n          abortEarly: false\n        });\n        return null;\n      } catch (err) {\n        var errors = err.inner.reduce(function (acc, currentError) {\n          if (acc[currentError.params.path]) {\n            acc[currentError.params.path].push(currentError.message);\n            return acc;\n          } else {\n            acc[currentError.params.path] = [currentError.message];\n            return acc;\n          }\n        }, {});\n        return _Object$keys(errors).length > 0 ? errors : null;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validatePrevFields\", function (schema, fields) {\n      try {\n        schema.validateSync(fields, {\n          abortEarly: false\n        });\n        return null;\n      } catch (err) {\n        var errors = err.inner.reduce(function (acc, currentError) {\n          if (!_this.state.prevErrors[currentError.params.path]) {\n            return acc;\n          }\n\n          if (acc[currentError.params.path]) {\n            acc[currentError.params.path].push(currentError.message);\n            return acc;\n          } else {\n            acc[currentError.params.path] = [currentError.message];\n            return acc;\n          }\n        }, {});\n        return _Object$keys(errors).length > 0 ? errors : null;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitFormWithValidation\", function () {\n      var errors = _this.validateAllFields(_this.props.validationSchema, _this.props.fields);\n\n      if (!errors) {\n        return _this.props.submitForm();\n      }\n\n      _this.setState({\n        errors: errors,\n        prevErrors: errors\n      });\n    });\n\n    _this.state = {\n      errors: null,\n      prevErrors: {}\n    };\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var errors = this.validatePrevFields(this.props.validationSchema, this.props.fields);\n      var errDiff = DeepDiff(errors, this.state.errors);\n\n      if (errDiff) {\n        this.setState({\n          errors: errors\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = this.props.className;\n      return __jsx(\"div\", {\n        className: classNames('form', className && className)\n      }, this.props.children({\n        errors: this.state.errors,\n        submitFormWithValidation: this.submitFormWithValidation\n      }));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":null,"metadata":{},"sourceType":"module"}