{"version":3,"file":"static/webpack/static/development/pages/testimonials.js.7c6d0afb5d5273011af5.hot-update.js","sources":["webpack:///./pages/testimonials.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider, leftAlign } from \"../styles/theme\";\nimport {\n  Hero,\n  Container,\n  Row,\n  Column,\n  Subheader,\n  Header\n} from \"../styles/common\";\nimport Layout from \"../components/layouts\";\nimport TestimonialsList from \"../components/testimonials-list\";\nimport { hero, testimonials } from \"../content/testimonials-page.json\";\n\nconst Testimonials = props => {\n  const [slideIdx, setSlide] = useState(0);\n  useInterval(() => {\n    // Your custom logic here\n    setCount(count + 1);\n  }, 1000);\n\n  function useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest function.\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }\n  return (\n    <Layout>\n      <ThemeProvider>\n        <Hero layout={leftAlign}>\n          <Container>\n            <Row>\n              <Column>\n                <Header>{hero.header}</Header>\n                <Subheader>{hero.subheader}</Subheader>\n              </Column>\n              <Column>{testimonials[slideIdx].review}</Column>\n            </Row>\n          </Container>\n        </Hero>\n      </ThemeProvider>\n      <TestimonialsList testimonials={testimonials} />\n    </Layout>\n  );\n};\nexport default Testimonials;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;;;;A","sourceRoot":""}